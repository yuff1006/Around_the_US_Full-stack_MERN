{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  login(credentials) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      body: credentials\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  initialize() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  _handleFetchResponse(path) {\n    let methodUsed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let bodyContent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    return fetch(`${this._baseUrl}${path}`, {\n      method: methodUsed,\n      headers: this._headers,\n      body: bodyContent\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n\n  getInitialCards() {\n    return this._handleFetchResponse(\"/cards\");\n  }\n\n  getUserInfo() {\n    return this._handleFetchResponse(\"/users/me\");\n  }\n\n  editUserProfile(inputValues) {\n    const bodyContent = JSON.stringify({\n      name: inputValues.name,\n      about: inputValues.about\n    });\n    return this._handleFetchResponse(\"/users/me\", \"PATCH\", bodyContent);\n  }\n\n  addNewCard(inputValues) {\n    const bodyContent = JSON.stringify({\n      name: inputValues.name,\n      link: inputValues.link\n    });\n    return this._handleFetchResponse(\"/cards\", \"POST\", bodyContent);\n  }\n\n  getCardLikeInfo() {\n    return this._handleFetchResponse(\"/cards\");\n  }\n\n  deleteCard(cardId) {\n    return this._handleFetchResponse(`/cards/${cardId}`, \"DELETE\");\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._handleFetchResponse(`/cards/likes/${cardId}`, \"DELETE\");\n    } else {\n      return this._handleFetchResponse(`/cards/likes/${cardId}`, \"PUT\");\n    }\n  }\n\n  editProfilePic(avatarLink) {\n    const bodyContent = JSON.stringify({\n      avatar: avatarLink.avatar\n    });\n    return this._handleFetchResponse(\"/users/me/avatar\", \"PATCH\", bodyContent);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://register.nomoreparties.co\",\n  headers: {\n    authorization: \"1384428a-b01c-46ae-afda-f222b9d7dc7d\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default Api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","login","credentials","fetch","method","body","then","res","console","log","catch","err","initialize","Promise","all","getUserInfo","getInitialCards","_handleFetchResponse","path","methodUsed","bodyContent","undefined","ok","json","reject","status","editUserProfile","inputValues","JSON","stringify","name","about","addNewCard","link","getCardLikeInfo","deleteCard","cardId","changeLikeCardStatus","isLiked","editProfilePic","avatarLink","avatar","api","authorization"],"sources":["/Users/yuffiehu/Documents/Coding/Practicum/react-around-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  login(credentials) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      body: credentials,\n    })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  initialize() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n  _handleFetchResponse(path, methodUsed = \"GET\", bodyContent = undefined) {\n    return fetch(`${this._baseUrl}${path}`, {\n      method: methodUsed,\n      headers: this._headers,\n      body: bodyContent,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Error: ${res.status}`);\n      }\n    });\n  }\n  getInitialCards() {\n    return this._handleFetchResponse(\"/cards\");\n  }\n  getUserInfo() {\n    return this._handleFetchResponse(\"/users/me\");\n  }\n  editUserProfile(inputValues) {\n    const bodyContent = JSON.stringify({\n      name: inputValues.name,\n      about: inputValues.about,\n    });\n    return this._handleFetchResponse(\"/users/me\", \"PATCH\", bodyContent);\n  }\n  addNewCard(inputValues) {\n    const bodyContent = JSON.stringify({\n      name: inputValues.name,\n      link: inputValues.link,\n    });\n    return this._handleFetchResponse(\"/cards\", \"POST\", bodyContent);\n  }\n  getCardLikeInfo() {\n    return this._handleFetchResponse(\"/cards\");\n  }\n  deleteCard(cardId) {\n    return this._handleFetchResponse(`/cards/${cardId}`, \"DELETE\");\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._handleFetchResponse(`/cards/likes/${cardId}`, \"DELETE\");\n    } else {\n      return this._handleFetchResponse(`/cards/likes/${cardId}`, \"PUT\");\n    }\n  }\n  editProfilePic(avatarLink) {\n    const bodyContent = JSON.stringify({\n      avatar: avatarLink.avatar,\n    });\n    return this._handleFetchResponse(\"/users/me/avatar\", \"PATCH\", bodyContent);\n  }\n}\nexport const api = new Api({\n  baseUrl: \"https://register.nomoreparties.co\",\n  headers: {\n    authorization: \"1384428a-b01c-46ae-afda-f222b9d7dc7d\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default Api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}